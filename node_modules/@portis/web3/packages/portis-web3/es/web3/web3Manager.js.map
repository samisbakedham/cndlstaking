{"version":3,"file":"web3Manager.js","sourceRoot":"","sources":["../../src/web3/web3Manager.ts"],"names":[],"mappings":"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","sourcesContent":["const ProviderEngine = require('web3-provider-engine');\nconst CacheSubprovider = require('web3-provider-engine/dist/es5/subproviders/cache.js');\nconst FixtureSubprovider = require('web3-provider-engine/dist/es5/subproviders/fixture.js');\nconst FilterSubprovider = require('web3-provider-engine/dist/es5/subproviders/filters.js');\nconst HookedWalletSubprovider = require('web3-provider-engine/dist/es5/subproviders/hooked-wallet.js');\nconst NonceSubprovider = require('web3-provider-engine/dist/es5/subproviders/nonce-tracker.js');\nconst SubscriptionsSubprovider = require('web3-provider-engine/dist/es5/subproviders/subscriptions.js');\nimport { networkAdapter } from '../networks';\nimport { ISDKConfig, INetwork, IConnectionMethods } from '../interfaces';\nimport { getTxGas } from '../utils/getTxGas';\nimport { Query } from '../utils/query';\nimport { AsyncMethodReturns } from 'penpal';\n\ntype ProviderCallback = (error: string | null, result: any) => void;\nexport default class Web3Manager {\n  private engine: typeof ProviderEngine;\n  provider: typeof ProviderEngine;\n  private _selectedAddress?: string;\n  private _network?: string;\n\n  constructor(\n    private config: ISDKConfig,\n    private _getWidgetCommunication: () => Promise<AsyncMethodReturns<IConnectionMethods>>,\n  ) {\n    this.provider = this._initProvider();\n  }\n\n  setSelectedAddress(selectedAddress: string) {\n    this._selectedAddress = selectedAddress;\n  }\n\n  changeNetwork(network: string | INetwork, gasRelay?: boolean) {\n    const newNetwork = networkAdapter(network, gasRelay);\n    this.clearSubprovider(NonceSubprovider);\n    this.clearSubprovider(CacheSubprovider);\n    this.config.network = newNetwork;\n  }\n\n  private _initProvider() {\n    // don't init the engine twice\n    if (this.engine) {\n      return this.engine;\n    }\n\n    this.engine = new ProviderEngine();\n    const query = new Query(this.engine);\n\n    this.engine.send = (payload: any, callback: any) => {\n      // Web3 1.0 beta.38 (and above) calls `send` with method and parameters\n      if (typeof payload === 'string') {\n        return new Promise((resolve, reject) => {\n          this.engine.sendAsync(\n            {\n              jsonrpc: '2.0',\n              id: 42,\n              method: payload,\n              params: callback || [],\n            },\n            (error: any, response: any) => {\n              if (error) {\n                reject(error);\n              } else {\n                resolve(response.result);\n              }\n            },\n          );\n        });\n      }\n\n      // Web3 1.0 beta.37 (and below) uses `send` with a callback for async queries\n      if (callback) {\n        this.engine.sendAsync(payload, callback);\n        return;\n      }\n\n      let result: any = null;\n      switch (payload.method) {\n        case 'eth_accounts':\n          result = this._selectedAddress ? [this._selectedAddress] : [];\n          break;\n\n        case 'eth_coinbase':\n          result = this._selectedAddress ? [this._selectedAddress] : [];\n          break;\n\n        case 'net_version':\n          result = this._network;\n          break;\n\n        case 'eth_uninstallFilter':\n          this.engine.sendAsync(payload, (_: any) => _);\n          result = true;\n          break;\n\n        default:\n          var message = `The Portis Web3 object does not support synchronous methods like ${\n            payload.method\n          } without a callback parameter.`;\n          throw new Error(message);\n      }\n\n      return {\n        id: payload.id,\n        jsonrpc: payload.jsonrpc,\n        result,\n      };\n    };\n\n    this.engine.addProvider(\n      new FixtureSubprovider({\n        web3_clientVersion: `Portis/v${this.config.version}/javascript`,\n        net_listening: true,\n        eth_hashrate: '0x00',\n        eth_mining: false,\n        eth_syncing: true,\n      }),\n    );\n\n    // cache layer\n    this.engine.addProvider(new CacheSubprovider());\n\n    // subscriptions manager\n    this.engine.addProvider(new SubscriptionsSubprovider());\n\n    // filters\n    this.engine.addProvider(new FilterSubprovider());\n\n    // pending nonce\n    this.engine.addProvider(new NonceSubprovider());\n\n    // set default id when needed\n    this.engine.addProvider({\n      setEngine: (_: any) => _,\n      handleRequest: async (payload: any, next: () => {}) => {\n        if (!payload.id) {\n          payload.id = 42;\n        }\n        next();\n      },\n    });\n\n    // main web3 functionality - carried out via widget communication\n    this.engine.addProvider(\n      new HookedWalletSubprovider({\n        getAccounts: async (cb: ProviderCallback) => {\n          const widgetCommunication = await this._getWidgetCommunication();\n          const { error, result } = await widgetCommunication.getAccounts(this.config);\n          if (!error && result) {\n            this._selectedAddress = result[0];\n          }\n          cb(error, result);\n        },\n        signTransaction: async (txParams: any, cb: ProviderCallback) => {\n          const widgetCommunication = await this._getWidgetCommunication();\n          const { error, result } = await widgetCommunication.signTransaction(txParams, this.config);\n          cb(error, result);\n        },\n        signMessage: async (msgParams: any, cb: ProviderCallback) => {\n          const widgetCommunication = await this._getWidgetCommunication();\n          const params = { ...msgParams, messageStandard: 'signMessage' };\n          const { error, result } = await widgetCommunication.signMessage(params, this.config);\n          cb(error, result);\n        },\n        signPersonalMessage: async (msgParams: any, cb: ProviderCallback) => {\n          const widgetCommunication = await this._getWidgetCommunication();\n          const params = { ...msgParams, messageStandard: 'signPersonalMessage' };\n          const { error, result } = await widgetCommunication.signMessage(params, this.config);\n          cb(error, result);\n        },\n        signTypedMessage: async (msgParams: any, cb: ProviderCallback) => {\n          const widgetCommunication = await this._getWidgetCommunication();\n          const params = { ...msgParams, messageStandard: 'signTypedMessage' };\n          const { error, result } = await widgetCommunication.signMessage(params, this.config);\n          cb(error, result);\n        },\n        signTypedMessageV3: async (msgParams: any, cb: ProviderCallback) => {\n          const widgetCommunication = await this._getWidgetCommunication();\n          const params = { ...msgParams, messageStandard: 'signTypedMessageV3' };\n          const { error, result } = await widgetCommunication.signMessage(params, this.config);\n          cb(error, result);\n        },\n        estimateGas: async (txParams: any, cb: ProviderCallback) => {\n          const gas = await getTxGas(query, txParams);\n          cb(null, gas);\n        },\n        getGasPrice: async (cb: ProviderCallback) => {\n          cb(null, '');\n        },\n      }),\n    );\n\n    this.engine.addProvider({\n      setEngine: (_: any) => _,\n      handleRequest: async (payload: any, next: () => {}, end: (error: string | null, result: any) => {}) => {\n        const widgetCommunication = await this._getWidgetCommunication();\n        const { error, result } = await widgetCommunication.relay(payload, this.config);\n        if (payload.method === 'net_version') {\n          this._network = result;\n          this.engine.networkVersion = this._network;\n        }\n        end(error, result);\n      },\n    });\n\n    this.engine.enable = () =>\n      new Promise((resolve, reject) => {\n        this.engine.sendAsync({ method: 'eth_accounts' }, (error: any, response: any) => {\n          if (error) {\n            reject(error);\n          } else {\n            resolve(response.result);\n          }\n        });\n      });\n\n    this.engine.isConnected = () => {\n      return true;\n    };\n\n    this.engine.isPortis = true;\n\n    this.engine.on('error', (error: any) => {\n      if (error && error.message && error.message.includes('PollingBlockTracker')) {\n        console.warn('If you see this warning constantly, there might be an error with your RPC node.');\n      } else {\n        console.error(error);\n      }\n    });\n\n    this.engine.start();\n    return this.engine;\n  }\n\n  private clearSubprovider(subproviderType: any) {\n    const subprovider = this.provider._providers.find((subprovider: any) => subprovider instanceof subproviderType);\n    this.provider.removeProvider(subprovider);\n    this.provider.addProvider(new subproviderType());\n  }\n}\n"]}