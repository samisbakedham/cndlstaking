{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { networkAdapter } from './networks';\nimport { INetwork, IOptions, BTCSignTxSDKInput, ISDKConfig, IWidget } from './interfaces';\nimport { onWindowLoad } from './utils/onWindowLoad';\nimport { validateSecureOrigin } from './utils/secureOrigin';\nimport WidgetManager, { windowLoadHandler } from './widget/widgetManager';\nimport Web3Manager from './web3/web3Manager';\nimport { isClientSide } from './utils/isClientSide';\nimport { mockify } from './utils/mockify';\n\nconst VERSION = '$$PORTIS_SDK_VERSION$$';\n\nconst SUPPORTED_SCOPES = ['email', 'reputation'];\n\nonWindowLoad()\n  .then(windowLoadHandler)\n  .catch(() => {}); // Prevents unhandledPromiseRejectionWarning, which happens when using React SSR;\n\nclass Portis {\n  private _widgetManagerInstance?: WidgetManager;\n  private _web3ManagerInstance?: Web3Manager;\n  private _config?: ISDKConfig;\n\n  constructor(dappId: string, network: string | INetwork, options: IOptions = {}) {\n    // If rendered in SSR, return a mock version of the Portis object.\n    // All methods are callable and all properties exist, but they do nothing.\n    if (!isClientSide()) {\n      return mockify<Portis>(this);\n    }\n\n    validateSecureOrigin();\n    this._validateParams(dappId, network, options);\n    this._config = {\n      dappId,\n      network: networkAdapter(network, options.gasRelay),\n      version: VERSION,\n      scope: options.scope,\n      registerPageByDefault: options.registerPageByDefault,\n      staging: options.staging,\n    };\n\n    this._getWidgetCommunication = this._getWidgetCommunication.bind(this);\n    this._widgetManagerInstance = new WidgetManager(this.config, this._clearProviderSession);\n    this._web3ManagerInstance = new Web3Manager(this.config, this._getWidgetCommunication);\n\n    this.setDefaultEmail = this.setDefaultEmail.bind(this);\n    this.changeNetwork = this.changeNetwork.bind(this);\n    this.getWidget = this.getWidget.bind(this);\n    this.onLogin = this.onLogin.bind(this);\n    this.onLogout = this.onLogout.bind(this);\n    this.onActiveWalletChanged = this.onActiveWalletChanged.bind(this);\n    this.onError = this.onError.bind(this);\n    this.showPortis = this.showPortis.bind(this);\n    this.getCampaignInfo = this.getCampaignInfo.bind(this);\n    this.claimVoucher = this.claimVoucher.bind(this);\n    this.getExtendedPublicKey = this.getExtendedPublicKey.bind(this);\n    this.importWallet = this.importWallet.bind(this);\n    this.isLoggedIn = this.isLoggedIn.bind(this);\n    this.signBitcoinTransaction = this.signBitcoinTransaction.bind(this);\n    this.showBitcoinWallet = this.showBitcoinWallet.bind(this);\n  }\n\n  get _widgetManager() {\n    return this._widgetManagerInstance!;\n  }\n\n  get _web3Manager() {\n    return this._web3ManagerInstance!;\n  }\n\n  get config() {\n    return this._config!;\n  }\n\n  private _clearProviderSession() {\n    this._web3Manager.setSelectedAddress('');\n  }\n\n  private async _getWidgetCommunication() {\n    return (await this._widgetManager.getWidget()).communication;\n  }\n\n  get web3Provider() {\n    return this._web3Manager.provider;\n  }\n\n  // Todo: deprecate\n  get provider() {\n    return this.web3Provider;\n  }\n\n  changeNetwork(network: string | INetwork, gasRelay?: boolean) {\n    this._web3Manager.changeNetwork(network, gasRelay);\n  }\n\n  setDefaultEmail(email: string) {\n    this._widgetManager.setDefaultEmail(email);\n  }\n\n  // async singleton\n  async getWidget(): Promise<IWidget> {\n    return this._widgetManager.getWidget();\n  }\n\n  // Population by the dev of SDK callbacks that might be invoked by the widget\n\n  onLogin(callback: (walletAddress: string, email?: string, reputation?: string) => void) {\n    this._widgetManager.setOnLoginCallback(callback);\n  }\n\n  onLogout(callback: () => void) {\n    this._widgetManager.setOnLogoutCallback(callback);\n  }\n\n  onActiveWalletChanged(callback: (walletAddress: string) => void) {\n    this._widgetManager.setOnActiveWalletChangedCallback(callback);\n  }\n\n  onError(callback: (error: Error) => void) {\n    this._widgetManager.setOnErrorCallback(callback);\n  }\n\n  // SDK methods that could be invoked by the user and handled by the widget\n\n  async showPortis() {\n    return this._widgetManager.showPortis();\n  }\n\n  async getCampaignInfo(campaignId: string) {\n    return this._widgetManager.getCampaignInfo(campaignId);\n  }\n\n  async claimVoucher(voucherId: string) {\n    return this._widgetManager.claimVoucher(voucherId);\n  }\n\n  async logout() {\n    return this._widgetManager.logout();\n  }\n\n  async getExtendedPublicKey(path: string = \"m/44'/60'/0'/0/0\", coin: string = 'Ethereum') {\n    return this._widgetManager.getExtendedPublicKey(path, coin);\n  }\n\n  async importWallet(mnemonicOrPrivateKey: string) {\n    return this._widgetManager.importWallet(mnemonicOrPrivateKey);\n  }\n\n  async isLoggedIn() {\n    return this._widgetManager.isLoggedIn();\n  }\n\n  async signBitcoinTransaction(params: BTCSignTxSDKInput) {\n    return this._widgetManager.signBitcoinTransaction(params);\n  }\n\n  async showBitcoinWallet(path: string = \"m/49'/0'/0'/0/0\") {\n    return this._widgetManager.showBitcoinWallet(path);\n  }\n\n  // internal methods\n  private _validateParams(dappId: string, network: string | INetwork, options: IOptions) {\n    if (!dappId) {\n      throw new Error(\"[Portis] 'dappId' is required. Get your dappId here: https://dashboard.portis.io\");\n    }\n\n    if (!network) {\n      throw new Error(\n        \"[Portis] 'network' is required. Read more about it here: https://docs.portis.io/#/configuration?id=network\",\n      );\n    }\n\n    if (options.scope) {\n      if (!Array.isArray(options.scope)) {\n        throw new Error(\n          \"[Portis] 'scope' must be an array. Read more about it here: https://docs.portis.io/#/configuration?id=scope\",\n        );\n      }\n\n      const unknownScope = options.scope.filter(item => SUPPORTED_SCOPES.indexOf(item) < 0);\n      if (unknownScope.length > 0) {\n        throw new Error(\n          \"[Portis] invalid 'scope' parameter. Read more about it here: https://docs.portis.io/#/configuration?id=scope\",\n        );\n      }\n    }\n\n    if (options.registerPageByDefault !== undefined && typeof options.registerPageByDefault !== 'boolean') {\n      throw new Error(\n        \"[Portis] invalid 'registerPageByDefault' parameter, must be a boolean. Read more about it here: https://docs.portis.io/#/configuration?id=registerPageByDefault\",\n      );\n    }\n  }\n}\n\nexport default Portis;\n"]}