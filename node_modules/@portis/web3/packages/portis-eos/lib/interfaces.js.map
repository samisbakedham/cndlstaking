{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../src/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import { ApiInterfaces } from 'eosjs';\n\nexport interface INetwork {\n  nodeUrl: string;\n  chainId?: string;\n  nodeProtocol?: 'rpc' | 'pocket';\n  gasRelayHubAddress?: string;\n}\n\nexport interface IConnectionMethods {\n  getAccounts: (config: ISDKConfig) => Promise<{ error: string; result: string[] }>;\n  signTransaction: (\n    txParams: ApiInterfaces.SignatureProviderArgs,\n    config: ISDKConfig,\n  ) => Promise<{ error: string; result: string[] }>;\n  relay: (payload: IPayload, config: ISDKConfig) => Promise<{ error: string; result: any }>;\n  showPortis: (config: ISDKConfig) => Promise<void>;\n}\n\nexport interface ISDKConfig {\n  dappId: string;\n  network: INetwork;\n  version: string;\n  defaultEmail?: string;\n  scope?: Scope[];\n  registerPageByDefault?: boolean;\n}\n\nexport type Scope = 'email';\n\nexport interface IOptions {\n  scope?: Scope[];\n  gasRelay?: boolean;\n  registerPageByDefault?: boolean;\n}\n\nexport interface IPayload {\n  id: number;\n  jsonrpc: string;\n  method: string;\n  params: any[];\n}\n"]}