{"version":3,"file":"networks.js","sourceRoot":"","sources":["../src/networks.ts"],"names":[],"mappings":"AAEA,MAAM,UAAU,cAAc,CAAC,OAA0B,EAAE,QAAkB;IAC3E,IAAM,UAAU,GAAG,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC;IAEhG,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAClC,MAAM,IAAI,KAAK,CACb,kHAAkH,CACnH,CAAC;KACH;IAED,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;QACvB,MAAM,IAAI,KAAK,CACb,4GAA4G,CAC7G,CAAC;KACH;IAED,IAAI,QAAQ,IAAI,CAAC,UAAU,CAAC,kBAAkB,EAAE;QAC9C,MAAM,IAAI,KAAK,CAAC,mDAAiD,OAAS,CAAC,CAAC;KAC7E;IAED,IAAI,OAAO,OAAO,KAAK,QAAQ,IAAI,CAAC,QAAQ,EAAE;QAC5C,OAAO,UAAU,CAAC,kBAAkB,CAAC;KACtC;IAED,UAAU,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY,IAAI,KAAK,CAAC;IAC3D,OAAO,UAAU,CAAC;AACpB,CAAC;AAED,IAAM,QAAQ,GAAgC;IAC5C,GAAG,EAAE;QACH,OAAO,EAAE,2BAA2B;QACpC,YAAY,EAAE,KAAK;QACnB,OAAO,EAAE,kEAAkE;KAC5E;IACD,SAAS,EAAE;QACT,OAAO,EAAE,gCAAgC;QACzC,YAAY,EAAE,KAAK;QACnB,OAAO,EAAE,kEAAkE;KAC5E;CACF,CAAC","sourcesContent":["import { INetwork } from './interfaces';\n\nexport function networkAdapter(network: string | INetwork, gasRelay?: boolean) {\n  const networkObj = typeof network === 'string' ? Object.assign({}, networks[network]) : network;\n\n  if (typeof networkObj !== 'object') {\n    throw new Error(\n      \"[Portis] illegal 'network' parameter. Read more about it here: https://docs.portis.io/#/configuration?id=network\",\n    );\n  }\n\n  if (!networkObj.nodeUrl) {\n    throw new Error(\n      \"[Portis] 'nodeUrl' is required. Read more about it here: https://docs.portis.io/#/configuration?id=network\",\n    );\n  }\n\n  if (gasRelay && !networkObj.gasRelayHubAddress) {\n    throw new Error(`[Portis] can't find default gas relay hub for ${network}`);\n  }\n\n  if (typeof network === 'string' && !gasRelay) {\n    delete networkObj.gasRelayHubAddress;\n  }\n\n  networkObj.nodeProtocol = networkObj.nodeProtocol || 'rpc';\n  return networkObj;\n}\n\nconst networks: { [key: string]: INetwork } = {\n  eos: {\n    nodeUrl: 'https://api.eosdetroit.io',\n    nodeProtocol: 'rpc',\n    chainId: 'aca376f206b8fc25a6ed44dbdc66547c36c6c33e3a119ffbeaef943642f0e906',\n  },\n  eosJungle: {\n    nodeUrl: 'https://jungle2.cryptolions.io',\n    nodeProtocol: 'rpc',\n    chainId: 'e70aaab8997e1dfce58fbfac80cbbb8fecec7b99cf982a9444273cbc64c41473',\n  },\n};\n"]}