{"version":3,"sources":["webpack://HttpHelpers/webpack/bootstrap","webpack://HttpHelpers/external \"lodash.merge\"","webpack://HttpHelpers/external \"@babel/runtime/helpers/defineProperty\"","webpack://HttpHelpers/./src/index.ts"],"names":["apiKey","embedHost","gatewayAuthHeader","gatewayEmbedHostHeader","setEmbedHost","embedHost_","clearEmbedHost","getEmbedHost","setAPIKey","apiKey_","clearAPIKey","getAPIKey","getApiKeyHeaders","headers","promiseTimeout","ms","promise","timeout","Promise","resolve","reject","id","setTimeout","clearTimeout","Error","race","get","url","options_","customOptions","defaultOptions","mode","useAPIKey","options","merge","method","response","fetch","ok","json","post","data","isUrlEncodedData","body","JSON","stringify","then","patch","remove","generateJsonRPCObject","parameters","jsonrpc","params","promiseRace"],"mappings":"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","file":"httpHelpers.cjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"lodash.merge\");","module.exports = require(\"@babel/runtime/helpers/defineProperty\");","/* eslint-disable @typescript-eslint/no-throw-literal */\nimport merge from \"lodash.merge\";\n\nexport interface CustomOptions {\n  [key: string]: unknown;\n  useAPIKey?: boolean;\n  isUrlEncodedData?: boolean;\n  timeout?: number;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface Data {}\n\nlet apiKey = \"torus-default\";\nlet embedHost = \"\";\n\n// #region API Keys\nexport const gatewayAuthHeader = \"x-api-key\";\nexport const gatewayEmbedHostHeader = \"x-embed-host\";\n\nexport function setEmbedHost(embedHost_: string): void {\n  embedHost = embedHost_;\n}\n\nexport function clearEmbedHost(): void {\n  embedHost = \"\";\n}\n\nexport function getEmbedHost(): string {\n  return embedHost;\n}\n\nexport function setAPIKey(apiKey_: string): void {\n  apiKey = apiKey_;\n}\n\nexport function clearAPIKey(): void {\n  apiKey = \"torus-default\";\n}\n\nexport function getAPIKey(): string {\n  return apiKey;\n}\n// #endregion\n\nfunction getApiKeyHeaders(): Record<string, string> {\n  const headers = {};\n  if (apiKey) headers[gatewayAuthHeader] = apiKey;\n  if (embedHost) headers[gatewayEmbedHostHeader] = embedHost;\n  return headers;\n}\n\nexport const promiseTimeout = <T>(ms: number, promise: Promise<T>): Promise<T> => {\n  const timeout = new Promise<T>((resolve, reject) => {\n    const id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new Error(`Timed out in ${ms}ms`));\n    }, ms);\n  });\n  return Promise.race<T>([promise, timeout]);\n};\n\nexport const get = async <T>(url: string, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {},\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"GET\" });\n  const response = await fetch(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  throw response;\n};\n\nexport const post = <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"POST\" });\n\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n\n  return promiseTimeout<T>(\n    (customOptions.timeout as number) || 60000,\n    fetch(url, options).then((response) => {\n      if (response.ok) {\n        return response.json() as Promise<T>;\n      }\n      throw response;\n    })\n  );\n};\n\nexport const patch = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"PATCH\" });\n  // deep merge changes the structure of form data and url encoded data ,\n  // so we should not deepmerge body data\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  throw response;\n};\n\nexport const remove = async <T>(url: string, data: Data = {}, options_: RequestInit = {}, customOptions: CustomOptions = {}) => {\n  const defaultOptions = {\n    mode: \"cors\" as RequestMode,\n    headers: {\n      \"Content-Type\": \"application/json; charset=utf-8\",\n    },\n  };\n  // for multipart request browser/client will add multipart content type\n  // along with multipart boundary , so for multipart request send\n  // content-type: undefined or send with multipart boundary if already known\n  if (customOptions.useAPIKey) {\n    defaultOptions.headers = { ...defaultOptions.headers, ...getApiKeyHeaders() };\n  }\n  const options = merge(defaultOptions, options_, { method: \"DELETE\" });\n  if (customOptions.isUrlEncodedData) {\n    // for multipart request browser/client will add multipart content type\n    // along with multipart boundary , so for multipart request send\n    // content-type: undefined or send with multipart boundary if already known\n    options.body = data as string;\n    // If url encoded data, this must not be the content type\n    if (options.headers[\"Content-Type\"] === \"application/json; charset=utf-8\") delete options.headers[\"Content-Type\"];\n  } else {\n    options.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, options);\n  if (response.ok) {\n    return response.json() as Promise<T>;\n  }\n  throw response;\n};\n\nexport const generateJsonRPCObject = (method: string, parameters: unknown) => ({\n  jsonrpc: \"2.0\",\n  method,\n  id: 10,\n  params: parameters,\n});\n\nexport const promiseRace = <T>(url: string, options: RequestInit, timeout = 60000) =>\n  Promise.race([\n    get<T>(url, options),\n    new Promise<T>((resolve, reject) => {\n      setTimeout(() => {\n        reject(new Error(\"timed out\"));\n      }, timeout);\n    }),\n  ]);\n"],"sourceRoot":""}