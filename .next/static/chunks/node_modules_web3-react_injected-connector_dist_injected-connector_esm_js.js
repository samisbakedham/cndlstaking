"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_web3-react_injected-connector_dist_injected-connector_esm_js"],{

/***/ "./node_modules/@web3-react/abstract-connector/dist/abstract-connector.esm.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-react/abstract-connector/dist/abstract-connector.esm.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AbstractConnector\": function() { return /* binding */ AbstractConnector; }\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _web3_react_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @web3-react/types */ \"./node_modules/@web3-react/types/dist/types.esm.js\");\n\n\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar AbstractConnector =\n/*#__PURE__*/\nfunction (_EventEmitter) {\n  _inheritsLoose(AbstractConnector, _EventEmitter);\n\n  function AbstractConnector(_temp) {\n    var _this;\n\n    var _ref = _temp === void 0 ? {} : _temp,\n        supportedChainIds = _ref.supportedChainIds;\n\n    _this = _EventEmitter.call(this) || this;\n    _this.supportedChainIds = supportedChainIds;\n    return _this;\n  }\n\n  var _proto = AbstractConnector.prototype;\n\n  _proto.emitUpdate = function emitUpdate(update) {\n    if (true) {\n      console.log(\"Emitting '\" + _web3_react_types__WEBPACK_IMPORTED_MODULE_1__.ConnectorEvent.Update + \"' with payload\", update);\n    }\n\n    this.emit(_web3_react_types__WEBPACK_IMPORTED_MODULE_1__.ConnectorEvent.Update, update);\n  };\n\n  _proto.emitError = function emitError(error) {\n    if (true) {\n      console.log(\"Emitting '\" + _web3_react_types__WEBPACK_IMPORTED_MODULE_1__.ConnectorEvent.Error + \"' with payload\", error);\n    }\n\n    this.emit(_web3_react_types__WEBPACK_IMPORTED_MODULE_1__.ConnectorEvent.Error, error);\n  };\n\n  _proto.emitDeactivate = function emitDeactivate() {\n    if (true) {\n      console.log(\"Emitting '\" + _web3_react_types__WEBPACK_IMPORTED_MODULE_1__.ConnectorEvent.Deactivate + \"'\");\n    }\n\n    this.emit(_web3_react_types__WEBPACK_IMPORTED_MODULE_1__.ConnectorEvent.Deactivate);\n  };\n\n  return AbstractConnector;\n}(events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter);\n\n\n//# sourceMappingURL=abstract-connector.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvYWJzdHJhY3QtY29ubmVjdG9yL2Rpc3QvYWJzdHJhY3QtY29ubmVjdG9yLmVzbS5qcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXNDO0FBQ2E7O0FBRW5EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxxQ0FBcUM7QUFDckM7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxRQUFRLElBQXFDO0FBQzdDLGlDQUFpQyxvRUFBcUI7QUFDdEQ7O0FBRUEsY0FBYyxvRUFBcUI7QUFDbkM7O0FBRUE7QUFDQSxRQUFRLElBQXFDO0FBQzdDLGlDQUFpQyxtRUFBb0I7QUFDckQ7O0FBRUEsY0FBYyxtRUFBb0I7QUFDbEM7O0FBRUE7QUFDQSxRQUFRLElBQXFDO0FBQzdDLGlDQUFpQyx3RUFBeUI7QUFDMUQ7O0FBRUEsY0FBYyx3RUFBeUI7QUFDdkM7O0FBRUE7QUFDQSxDQUFDLENBQUMsZ0RBQVk7O0FBRWU7QUFDN0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXJlYWN0L2Fic3RyYWN0LWNvbm5lY3Rvci9kaXN0L2Fic3RyYWN0LWNvbm5lY3Rvci5lc20uanM/MzQ0NiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdldmVudHMnO1xuaW1wb3J0IHsgQ29ubmVjdG9yRXZlbnQgfSBmcm9tICdAd2ViMy1yZWFjdC90eXBlcyc7XG5cbmZ1bmN0aW9uIF9pbmhlcml0c0xvb3NlKHN1YkNsYXNzLCBzdXBlckNsYXNzKSB7XG4gIHN1YkNsYXNzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoc3VwZXJDbGFzcy5wcm90b3R5cGUpO1xuICBzdWJDbGFzcy5wcm90b3R5cGUuY29uc3RydWN0b3IgPSBzdWJDbGFzcztcbiAgc3ViQ2xhc3MuX19wcm90b19fID0gc3VwZXJDbGFzcztcbn1cblxudmFyIEFic3RyYWN0Q29ubmVjdG9yID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uIChfRXZlbnRFbWl0dGVyKSB7XG4gIF9pbmhlcml0c0xvb3NlKEFic3RyYWN0Q29ubmVjdG9yLCBfRXZlbnRFbWl0dGVyKTtcblxuICBmdW5jdGlvbiBBYnN0cmFjdENvbm5lY3RvcihfdGVtcCkge1xuICAgIHZhciBfdGhpcztcblxuICAgIHZhciBfcmVmID0gX3RlbXAgPT09IHZvaWQgMCA/IHt9IDogX3RlbXAsXG4gICAgICAgIHN1cHBvcnRlZENoYWluSWRzID0gX3JlZi5zdXBwb3J0ZWRDaGFpbklkcztcblxuICAgIF90aGlzID0gX0V2ZW50RW1pdHRlci5jYWxsKHRoaXMpIHx8IHRoaXM7XG4gICAgX3RoaXMuc3VwcG9ydGVkQ2hhaW5JZHMgPSBzdXBwb3J0ZWRDaGFpbklkcztcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICB2YXIgX3Byb3RvID0gQWJzdHJhY3RDb25uZWN0b3IucHJvdG90eXBlO1xuXG4gIF9wcm90by5lbWl0VXBkYXRlID0gZnVuY3Rpb24gZW1pdFVwZGF0ZSh1cGRhdGUpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkVtaXR0aW5nICdcIiArIENvbm5lY3RvckV2ZW50LlVwZGF0ZSArIFwiJyB3aXRoIHBheWxvYWRcIiwgdXBkYXRlKTtcbiAgICB9XG5cbiAgICB0aGlzLmVtaXQoQ29ubmVjdG9yRXZlbnQuVXBkYXRlLCB1cGRhdGUpO1xuICB9O1xuXG4gIF9wcm90by5lbWl0RXJyb3IgPSBmdW5jdGlvbiBlbWl0RXJyb3IoZXJyb3IpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkVtaXR0aW5nICdcIiArIENvbm5lY3RvckV2ZW50LkVycm9yICsgXCInIHdpdGggcGF5bG9hZFwiLCBlcnJvcik7XG4gICAgfVxuXG4gICAgdGhpcy5lbWl0KENvbm5lY3RvckV2ZW50LkVycm9yLCBlcnJvcik7XG4gIH07XG5cbiAgX3Byb3RvLmVtaXREZWFjdGl2YXRlID0gZnVuY3Rpb24gZW1pdERlYWN0aXZhdGUoKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgY29uc29sZS5sb2coXCJFbWl0dGluZyAnXCIgKyBDb25uZWN0b3JFdmVudC5EZWFjdGl2YXRlICsgXCInXCIpO1xuICAgIH1cblxuICAgIHRoaXMuZW1pdChDb25uZWN0b3JFdmVudC5EZWFjdGl2YXRlKTtcbiAgfTtcblxuICByZXR1cm4gQWJzdHJhY3RDb25uZWN0b3I7XG59KEV2ZW50RW1pdHRlcik7XG5cbmV4cG9ydCB7IEFic3RyYWN0Q29ubmVjdG9yIH07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1hYnN0cmFjdC1jb25uZWN0b3IuZXNtLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@web3-react/abstract-connector/dist/abstract-connector.esm.js\n");

/***/ }),

/***/ "./node_modules/@web3-react/injected-connector/dist/injected-connector.esm.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@web3-react/injected-connector/dist/injected-connector.esm.js ***!
  \************************************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"InjectedConnector\": function() { return /* binding */ InjectedConnector; },\n/* harmony export */   \"NoEthereumProviderError\": function() { return /* binding */ NoEthereumProviderError; },\n/* harmony export */   \"UserRejectedRequestError\": function() { return /* binding */ UserRejectedRequestError; }\n/* harmony export */ });\n/* harmony import */ var _web3_react_abstract_connector__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @web3-react/abstract-connector */ \"./node_modules/@web3-react/abstract-connector/dist/abstract-connector.esm.js\");\n/* harmony import */ var tiny_warning__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! tiny-warning */ \"./node_modules/tiny-warning/dist/tiny-warning.esm.js\");\n\n\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n// A type of promise-like that resolves synchronously and supports only one observer\nvar _iteratorSymbol =\n/*#__PURE__*/\ntypeof Symbol !== \"undefined\" ? Symbol.iterator || (Symbol.iterator =\n/*#__PURE__*/\nSymbol(\"Symbol.iterator\")) : \"@@iterator\"; // Asynchronously iterate through an object's values\nvar _asyncIteratorSymbol =\n/*#__PURE__*/\ntypeof Symbol !== \"undefined\" ? Symbol.asyncIterator || (Symbol.asyncIterator =\n/*#__PURE__*/\nSymbol(\"Symbol.asyncIterator\")) : \"@@asyncIterator\"; // Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\n\nfunction _catch(body, recover) {\n  try {\n    var result = body();\n  } catch (e) {\n    return recover(e);\n  }\n\n  if (result && result.then) {\n    return result.then(void 0, recover);\n  }\n\n  return result;\n} // Asynchronously await a promise and pass the result to a finally continuation\n\nfunction parseSendReturn(sendReturn) {\n  return sendReturn.hasOwnProperty('result') ? sendReturn.result : sendReturn;\n}\n\nvar NoEthereumProviderError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inheritsLoose(NoEthereumProviderError, _Error);\n\n  function NoEthereumProviderError() {\n    var _this;\n\n    _this = _Error.call(this) || this;\n    _this.name = _this.constructor.name;\n    _this.message = 'No Ethereum provider was found on window.ethereum.';\n    return _this;\n  }\n\n  return NoEthereumProviderError;\n}(\n/*#__PURE__*/\n_wrapNativeSuper(Error));\nvar UserRejectedRequestError =\n/*#__PURE__*/\nfunction (_Error2) {\n  _inheritsLoose(UserRejectedRequestError, _Error2);\n\n  function UserRejectedRequestError() {\n    var _this2;\n\n    _this2 = _Error2.call(this) || this;\n    _this2.name = _this2.constructor.name;\n    _this2.message = 'The user rejected the request.';\n    return _this2;\n  }\n\n  return UserRejectedRequestError;\n}(\n/*#__PURE__*/\n_wrapNativeSuper(Error));\nvar InjectedConnector =\n/*#__PURE__*/\nfunction (_AbstractConnector) {\n  _inheritsLoose(InjectedConnector, _AbstractConnector);\n\n  function InjectedConnector(kwargs) {\n    var _this3;\n\n    _this3 = _AbstractConnector.call(this, kwargs) || this;\n    _this3.handleNetworkChanged = _this3.handleNetworkChanged.bind(_assertThisInitialized(_this3));\n    _this3.handleChainChanged = _this3.handleChainChanged.bind(_assertThisInitialized(_this3));\n    _this3.handleAccountsChanged = _this3.handleAccountsChanged.bind(_assertThisInitialized(_this3));\n    _this3.handleClose = _this3.handleClose.bind(_assertThisInitialized(_this3));\n    return _this3;\n  }\n\n  var _proto = InjectedConnector.prototype;\n\n  _proto.handleChainChanged = function handleChainChanged(chainId) {\n    if (true) {\n      console.log(\"Handling 'chainChanged' event with payload\", chainId);\n    }\n\n    this.emitUpdate({\n      chainId: chainId,\n      provider: window.ethereum\n    });\n  };\n\n  _proto.handleAccountsChanged = function handleAccountsChanged(accounts) {\n    if (true) {\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts);\n    }\n\n    if (accounts.length === 0) {\n      this.emitDeactivate();\n    } else {\n      this.emitUpdate({\n        account: accounts[0]\n      });\n    }\n  };\n\n  _proto.handleClose = function handleClose(code, reason) {\n    if (true) {\n      console.log(\"Handling 'close' event with payload\", code, reason);\n    }\n\n    this.emitDeactivate();\n  };\n\n  _proto.handleNetworkChanged = function handleNetworkChanged(networkId) {\n    if (true) {\n      console.log(\"Handling 'networkChanged' event with payload\", networkId);\n    }\n\n    this.emitUpdate({\n      chainId: networkId,\n      provider: window.ethereum\n    });\n  };\n\n  _proto.activate = function activate() {\n    try {\n      var _temp5 = function _temp5(_result) {\n        if (_exit2) return _result;\n\n        function _temp2() {\n          return _extends({\n            provider: window.ethereum\n          }, account ? {\n            account: account\n          } : {});\n        }\n\n        var _temp = function () {\n          if (!account) {\n            // if enable is successful but doesn't return accounts, fall back to getAccount (not happy i have to do this...)\n            return Promise.resolve(window.ethereum.enable().then(function (sendReturn) {\n              return sendReturn && parseSendReturn(sendReturn)[0];\n            })).then(function (_window$ethereum$enab) {\n              account = _window$ethereum$enab;\n            });\n          }\n        }();\n\n        // if unsuccessful, try enable\n        return _temp && _temp.then ? _temp.then(_temp2) : _temp2(_temp);\n      };\n\n      var _exit2 = false;\n\n      var _this5 = this;\n\n      if (!window.ethereum) {\n        throw new NoEthereumProviderError();\n      }\n\n      if (window.ethereum.on) {\n        window.ethereum.on('chainChanged', _this5.handleChainChanged);\n        window.ethereum.on('accountsChanged', _this5.handleAccountsChanged);\n        window.ethereum.on('close', _this5.handleClose);\n        window.ethereum.on('networkChanged', _this5.handleNetworkChanged);\n      }\n\n      if (window.ethereum.isMetaMask) {\n        ;\n        window.ethereum.autoRefreshOnNetworkChange = false;\n      } // try to activate + get account via eth_requestAccounts\n\n\n      var account;\n\n      var _temp6 = _catch(function () {\n        return Promise.resolve(window.ethereum.send('eth_requestAccounts').then(function (sendReturn) {\n          return parseSendReturn(sendReturn)[0];\n        })).then(function (_window$ethereum$send) {\n          account = _window$ethereum$send;\n        });\n      }, function (error) {\n        if (error.code === 4001) {\n          throw new UserRejectedRequestError();\n        }\n\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__.default)(false, 'eth_requestAccounts was unsuccessful, falling back to enable') : 0;\n      });\n\n      return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(_temp5) : _temp5(_temp6));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getProvider = function getProvider() {\n    try {\n      return Promise.resolve(window.ethereum);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getChainId = function getChainId() {\n    try {\n      var _temp12 = function _temp12() {\n        function _temp9() {\n          if (!chainId) {\n            try {\n              chainId = parseSendReturn(window.ethereum.send({\n                method: 'net_version'\n              }));\n            } catch (_unused) {\n               true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__.default)(false, 'net_version v2 was unsuccessful, falling back to manual matches and static properties') : 0;\n            }\n          }\n\n          if (!chainId) {\n            if (window.ethereum.isDapper) {\n              chainId = parseSendReturn(window.ethereum.cachedResults.net_version);\n            } else {\n              chainId = window.ethereum.chainId || window.ethereum.netVersion || window.ethereum.networkVersion || window.ethereum._chainId;\n            }\n          }\n\n          return chainId;\n        }\n\n        var _temp8 = function () {\n          if (!chainId) {\n            var _temp14 = _catch(function () {\n              return Promise.resolve(window.ethereum.send('net_version').then(parseSendReturn)).then(function (_window$ethereum$send3) {\n                chainId = _window$ethereum$send3;\n              });\n            }, function () {\n               true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__.default)(false, 'net_version was unsuccessful, falling back to net version v2') : 0;\n            });\n\n            if (_temp14 && _temp14.then) return _temp14.then(function () {});\n          }\n        }();\n\n        return _temp8 && _temp8.then ? _temp8.then(_temp9) : _temp9(_temp8);\n      };\n\n      if (!window.ethereum) {\n        throw new NoEthereumProviderError();\n      }\n\n      var chainId;\n\n      var _temp13 = _catch(function () {\n        return Promise.resolve(window.ethereum.send('eth_chainId').then(parseSendReturn)).then(function (_window$ethereum$send2) {\n          chainId = _window$ethereum$send2;\n        });\n      }, function () {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__.default)(false, 'eth_chainId was unsuccessful, falling back to net_version') : 0;\n      });\n\n      return Promise.resolve(_temp13 && _temp13.then ? _temp13.then(_temp12) : _temp12(_temp13));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.getAccount = function getAccount() {\n    try {\n      var _temp20 = function _temp20() {\n        function _temp17() {\n          if (!account) {\n            account = parseSendReturn(window.ethereum.send({\n              method: 'eth_accounts'\n            }))[0];\n          }\n\n          return account;\n        }\n\n        var _temp16 = function () {\n          if (!account) {\n            var _temp22 = _catch(function () {\n              return Promise.resolve(window.ethereum.enable().then(function (sendReturn) {\n                return parseSendReturn(sendReturn)[0];\n              })).then(function (_window$ethereum$enab2) {\n                account = _window$ethereum$enab2;\n              });\n            }, function () {\n               true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__.default)(false, 'enable was unsuccessful, falling back to eth_accounts v2') : 0;\n            });\n\n            if (_temp22 && _temp22.then) return _temp22.then(function () {});\n          }\n        }();\n\n        return _temp16 && _temp16.then ? _temp16.then(_temp17) : _temp17(_temp16);\n      };\n\n      if (!window.ethereum) {\n        throw new NoEthereumProviderError();\n      }\n\n      var account;\n\n      var _temp21 = _catch(function () {\n        return Promise.resolve(window.ethereum.send('eth_accounts').then(function (sendReturn) {\n          return parseSendReturn(sendReturn)[0];\n        })).then(function (_window$ethereum$send4) {\n          account = _window$ethereum$send4;\n        });\n      }, function () {\n         true ? (0,tiny_warning__WEBPACK_IMPORTED_MODULE_1__.default)(false, 'eth_accounts was unsuccessful, falling back to enable') : 0;\n      });\n\n      return Promise.resolve(_temp21 && _temp21.then ? _temp21.then(_temp20) : _temp20(_temp21));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  _proto.deactivate = function deactivate() {\n    if (window.ethereum && window.ethereum.removeListener) {\n      window.ethereum.removeListener('chainChanged', this.handleChainChanged);\n      window.ethereum.removeListener('accountsChanged', this.handleAccountsChanged);\n      window.ethereum.removeListener('close', this.handleClose);\n      window.ethereum.removeListener('networkChanged', this.handleNetworkChanged);\n    }\n  };\n\n  _proto.isAuthorized = function isAuthorized() {\n    try {\n      if (!window.ethereum) {\n        return Promise.resolve(false);\n      }\n\n      return Promise.resolve(_catch(function () {\n        return Promise.resolve(window.ethereum.send('eth_accounts').then(function (sendReturn) {\n          if (parseSendReturn(sendReturn).length > 0) {\n            return true;\n          } else {\n            return false;\n          }\n        }));\n      }, function () {\n        return false;\n      }));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n\n  return InjectedConnector;\n}(_web3_react_abstract_connector__WEBPACK_IMPORTED_MODULE_0__.AbstractConnector);\n\n\n//# sourceMappingURL=injected-connector.esm.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@web3-react/injected-connector/dist/injected-connector.esm.js\n");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ (function(module) {

eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/events/events.js\n");

/***/ })

}]);